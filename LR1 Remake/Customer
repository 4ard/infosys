import re
from BaseCustomer import BaseCustomer

class Customer(BaseCustomer):
    def __init__(self, customer_id, name, address, phone, contact_person):
        super().__init__(customer_id, name, phone, contact_person)
        self.set_address(address)

    
    def get_address(self):
        return self.__address

    
    def set_address(self, value):
        self.validate_field(value, "address")
        self.__address = value

    def __str__(self):
        return (
            f"Customer(ID: {self.get_customer_id()}, Name: {self.get_name()}, Address: {self.get_address()}, "
            f"Phone: {self.get_phone()}, Contact Person: {self.get_contact_person()})"
        )

    def to_short_string(self):
        return super().__str__()

    @property
    def full_version(self):
        return (
            f"{self.get_name()}",
            self.get_address(),
            self.get_phone(),
            self.get_contact_person(),
        )

    @property
    def short_version(self):
        return (
            f"{self.get_name()}",
            self.get_phone(),
        )

# Пример использования
if __name__ == "__main__":
    try:
        customer = Customer(1, "Влад", "Красная 64", "8794546468", "Виктор")
        print("Full version:", customer)
        print("Short version:", customer.to_short_string())

        
        customer.set_name("Влад")
        customer.set_phone("89784524565")
        customer.set_address("Северная 64")
        print("Полная версия:", customer)
        print("Короткая версия:", customer.to_short_string())

        
        customer.set_address("")  
    except ValueError as e:
        print(e)
